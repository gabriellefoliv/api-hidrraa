generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aporte {
  codAporte        Int                    @id @default(autoincrement())
  dataInvestimento DateTime
  bc_valor         Float
  validadoAGEVAP   Boolean                @default(false)
  codInvestidor    Int
  codCBH           Int
  investidor_esg   investidor_esg         @relation(fields: [codInvestidor], references: [codInvestidor], map: "aporte_ibfk_1")
  cbh              cbh                    @relation(fields: [codCBH], references: [codCBH], map: "aporte_ibfk_2")
  transacoes       transacao_blockchain[]

  @@index([codCBH], map: "aporte_codCBH_idx")
  @@index([codInvestidor], map: "aporte_codInvestidor_idx")
}

model cbh {
  codCBH           Int                @id @default(autoincrement())
  nome             String             @db.VarChar(255)
  aporte           aporte[]
  comite_investido comite_investido[]
  microbacia       microbacia[]
  produtor_rural   produtor_rural[]
  usuario          usuario[]
}

model comite_investido {
  codCBH         Int
  codInvestidor  Int
  investidor_esg investidor_esg @relation(fields: [codInvestidor], references: [codInvestidor], map: "comite_investido_ibfk_1")
  cbh            cbh            @relation(fields: [codCBH], references: [codCBH], map: "comite_investido_ibfk_2")

  @@id([codCBH, codInvestidor])
  @@index([codCBH], map: "comite_investido_codCBH_idx")
  @@index([codInvestidor], map: "codInvestidor")
}

model entidadeexecutora {
  codEntExec            Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(255)
  cnpjcpf               String                  @db.VarChar(255)
  especialidade         String                  @db.VarChar(255)
  contato               String                  @db.VarChar(255)
  codUsuario            Int
  usuario               usuario                 @relation(fields: [codUsuario], references: [codUsuario], map: "entidadeexecutora_ibfk_1")
  pagto_marco_concluido pagto_marco_concluido[]
  projeto               projeto[]

  @@index([codUsuario], map: "entidadeexecutora_codUsuario_idx")
}

model entidade_gerenciadora {
  codEntGer              Int                      @id @default(autoincrement())
  nome                   String                   @db.VarChar(255)
  cnpjcpf                String                   @db.VarChar(255)
  contato                String                   @db.VarChar(255)
  codUsuario             Int
  usuario                usuario                  @relation(fields: [codUsuario], references: [codUsuario], map: "entidadegerenciadora_ibfk_1")
  projeto                projeto[]
  relatorio_gerenciadora relatorio_gerenciadora[]

  @@index([codUsuario], map: "entidade_gerenciadora_codUsuario_idx")
}

model evidencia_apresentada {
  codEvidenciaApresentada Int                 @id @default(autoincrement())
  caminhoArquivo          String              @db.VarChar(255)
  dataUpload              DateTime
  codExecucaoMarco        Int
  codEvidenciaDemandada   Int
  execucao_marco          execucao_marco      @relation(fields: [codExecucaoMarco], references: [codExecucaoMarco], map: "evidencia_apresentada_ibfk_1")
  evidencia_demandada     evidencia_demandada @relation(fields: [codEvidenciaDemandada], references: [codEvidenciaDemandada], map: "evidencia_apresentada_ibfk_2")

  @@index([codEvidenciaDemandada], map: "codEvidenciaDemandada")
  @@index([codExecucaoMarco], map: "pagto_marco_concluido_codExecucaoMarco_idx")
}

model relatorio_gerenciadora {
  codRelGer             Int                   @id @default(autoincrement())
  caminhoArquivo        String                @db.VarChar(255)
  dataUpload            DateTime
  codExecucaoMarco      Int
  codEntGer             Int
  execucao_marco        execucao_marco        @relation(fields: [codExecucaoMarco], references: [codExecucaoMarco], map: "relatorio_gerenciadora_ibfk_1")
  entidade_gerenciadora entidade_gerenciadora @relation(fields: [codEntGer], references: [codEntGer], map: "relatorio_gerenciadora_ibfk_2")
}

model evidencia_demandada {
  codEvidenciaDemandada Int                     @id @default(autoincrement())
  descricao             String                  @db.VarChar(255)
  tipoArquivo           String                  @db.VarChar(255)
  codMarcoRecomendado   Int
  evidencia_apresentada evidencia_apresentada[]
  marco_recomendado     marco_recomendado       @relation(fields: [codMarcoRecomendado], references: [codMarcoRecomendado], map: "evidencia_demandada_ibfk_1")

  @@index([codMarcoRecomendado], map: "evidencia_demandada_codMarcoRecomendado_idx")
}

model execucao_marco {
  codExecucaoMarco       Int                                   @id @default(autoincrement())
  descricao              String?                               @db.VarChar(255)
  descrDetAjustes        String?                               @db.VarChar(255)
  bc_statusValidacaoCBH  execucao_marco_bc_statusValidacaoCBH?
  codAvaliador           Int?
  codMarcoRecomendado    Int
  codProjeto             Int
  caminhoArquivo         String?                               @db.VarChar(255)
  valorEstimado          Float?
  dataConclusaoEfetiva   DateTime?                             @db.Date
  dataConclusaoPrevista  DateTime?                             @db.Date
  evidencia_apresentada  evidencia_apresentada[]
  marco_recomendado      marco_recomendado                     @relation(fields: [codMarcoRecomendado], references: [codMarcoRecomendado], map: "execucao_marco_ibfk_2")
  projeto                projeto                               @relation(fields: [codProjeto], references: [codProjeto], map: "execucao_marco_ibfk_3")
  pagto_marco_concluido  pagto_marco_concluido[]
  pagto_servico          pagto_servico[]
  relatorio_gerenciadora relatorio_gerenciadora[]

  @@unique([codProjeto, codMarcoRecomendado], name: "codProjeto_codMarcoRecomendado")
  @@index([codAvaliador], map: "codAvaliador")
  @@index([codMarcoRecomendado], map: "codMarcoRecomendado")
  @@index([codProjeto], map: "codProjeto")
}

model investidor_esg {
  codInvestidor    Int                @id @default(autoincrement())
  razaoSocial      String             @db.VarChar(255)
  cnpj             String             @db.VarChar(255)
  contato          String             @db.VarChar(255)
  codUsuario       Int
  aporte           aporte[]
  comite_investido comite_investido[]
  usuario          usuario            @relation(fields: [codUsuario], references: [codUsuario], map: "investidor_esg_ibfk_1")

  @@index([codUsuario], map: "codUsuario")
}

model marco_recomendado {
  codMarcoRecomendado Int                   @id @default(autoincrement())
  descricao           String                @db.VarChar(255)
  codTipoProjeto      Int
  evidencia_demandada evidencia_demandada[]
  execucao_marco      execucao_marco[]
  tipo_projeto        tipo_projeto          @relation(fields: [codTipoProjeto], references: [codTipoProjeto], map: "marco_recomendado_ibfk_1")

  @@index([codTipoProjeto], map: "marco_recomendado_codTipoProjeto_idx")
}

model microbacia {
  CodMicroBacia Int           @id @default(autoincrement())
  Nome          String        @db.VarChar(200)
  CodCBH        Int
  cbh           cbh           @relation(fields: [CodCBH], references: [codCBH], map: "microbacia_ibfk_1")
  projeto       projeto[]
  propriedade   propriedade[]

  @@index([CodCBH], map: "CodCBH")
}

model pagto_marco_concluido {
  codPagtoMarco     Int                    @id @default(autoincrement())
  bc_data           DateTime
  bc_valor          Float
  codExecucaoMarco  Int
  codProdutor       Int?
  CodEntExec        Int?
  execucao_marco    execucao_marco         @relation(fields: [codExecucaoMarco], references: [codExecucaoMarco], map: "pagto_marco_concluido_ibfk_2")
  produtor_rural    produtor_rural?        @relation(fields: [codProdutor], references: [codProdutor], onDelete: Restrict, map: "pagto_marco_concluido_ibfk_3")
  entidadeexecutora entidadeexecutora?     @relation(fields: [CodEntExec], references: [codEntExec], onDelete: Restrict, map: "pagto_marco_concluido_ibfk_4")
  transacoes        transacao_blockchain[]

  @@index([CodEntExec], map: "CodEntExec")
  @@index([codExecucaoMarco], map: "pagto_marco_concluido_codExecucaoMarco_idx2")
  @@index([codProdutor], map: "propriedade_codProdutor_idx")
}

model produtor_rural {
  codProdutor           Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(255)
  cpf                   String                  @db.VarChar(255)
  contato               String                  @db.VarChar(255)
  codCBH                Int
  pagto_marco_concluido pagto_marco_concluido[]
  cbh                   cbh                     @relation(fields: [codCBH], references: [codCBH], map: "produtor_rural_ibfk_1")
  propriedade           propriedade[]

  @@index([codCBH], map: "produtor_rural_codCBH_idx")
}

model projeto {
  codProjeto            Int                    @id @default(autoincrement())
  titulo                String?                @db.VarChar(255)
  objetivo              String?                @db.VarChar(255)
  acoes                 String?                @db.VarChar(255)
  cronograma            String?                @db.VarChar(255)
  caminhoArquivo        String?                @db.VarChar(255)
  orcamento             Float?
  codPropriedade        Int?
  codTipoProjeto        Int
  CodEntExec            Int?
  codEntGer             Int?
  CodMicroBacia         Int?
  dataSubmissao         DateTime?              @db.Date
  execucao_marco        execucao_marco[]
  tipo_projeto          tipo_projeto           @relation(fields: [codTipoProjeto], references: [codTipoProjeto], map: "projeto_ibfk_1")
  propriedade           propriedade?           @relation(fields: [codPropriedade], references: [codPropriedade], onDelete: Restrict, map: "projeto_ibfk_2")
  microbacia            microbacia?            @relation(fields: [CodMicroBacia], references: [CodMicroBacia], onDelete: Restrict, map: "projeto_ibfk_4")
  entidadeexecutora     entidadeexecutora?     @relation(fields: [CodEntExec], references: [codEntExec], map: "projeto_ibfk_5")
  entidade_gerenciadora entidade_gerenciadora? @relation(fields: [codEntGer], references: [codEntGer], map: "projeto_ibfk_6")

  @@index([CodEntExec], map: "CodEntExecutora")
  @@index([CodMicroBacia], map: "propriedade_CodMicroBacia_idx")
  @@index([codPropriedade], map: "codPropriedade")
  @@index([codTipoProjeto], map: "codTipoProjeto")
}

model propriedade {
  codPropriedade Int            @id @default(autoincrement())
  logradouro     String         @db.VarChar(255)
  numero         Int
  complemento    String         @db.VarChar(255)
  cep            String         @db.VarChar(255)
  bairro         String         @db.VarChar(255)
  cidade         String         @db.VarChar(255)
  uf             String         @db.VarChar(255)
  codProdutor    Int
  CodMicroBacia  Int
  projeto        projeto[]
  produtor_rural produtor_rural @relation(fields: [codProdutor], references: [codProdutor], map: "propriedade_ibfk_1")
  microbacia     microbacia     @relation(fields: [CodMicroBacia], references: [CodMicroBacia], map: "propriedade_ibfk_2")

  @@index([CodMicroBacia], map: "CodMicroBacia")
  @@index([codProdutor], map: "codProdutor")
}

model tipo_projeto {
  codTipoProjeto    Int                 @id @default(autoincrement())
  nome              String              @db.VarChar(255)
  descricao         String              @db.VarChar(255)
  marco_recomendado marco_recomendado[]
  projeto           projeto[]
}

model usuario {
  codUsuario            Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(200)
  email                 String                  @unique @db.VarChar(200)
  senha                 String                  @db.VarChar(200)
  codCBH                Int
  Perfil                String                  @db.VarChar(100)
  entidadeexecutora     entidadeexecutora[]
  investidor_esg        investidor_esg[]
  cbh                   cbh                     @relation(fields: [codCBH], references: [codCBH], map: "usuario_ibfk_1")
  entidade_gerenciadora entidade_gerenciadora[]

  @@index([codCBH], map: "codCBH")
}

model fornecedor {
  codFornecedor Int             @id @default(autoincrement())
  nome          String          @db.VarChar(255)
  cnpjcpf       String          @db.VarChar(255)
  contato       String          @db.VarChar(255)
  especialidade String          @db.VarChar(255)
  pagto_servico pagto_servico[]
}

model pagto_servico {
  codPagtoServico  Int                    @id @default(autoincrement())
  data             DateTime
  valor            Float
  docNF            String
  codFornecedor    Int?
  codExecucaoMarco Int
  fornecedor       fornecedor?            @relation(fields: [codFornecedor], references: [codFornecedor], map: "pagto_servico_codFornecedor_fkey2")
  execucao_marco   execucao_marco         @relation(fields: [codExecucaoMarco], references: [codExecucaoMarco], map: "pagto_servico_ibfk_1")
  transacoes       transacao_blockchain[]

  @@index([codExecucaoMarco], map: "codExecucaoMarco")
  @@index([codFornecedor], map: "pagto_servico_codFornecedor_fkey")
}

model transacao_blockchain {
  codTransacao    Int                    @id @default(autoincrement())
  tipo            TransacaoTipo
  hash            String
  valor           Float
  data            DateTime
  origemWallet    String?
  destinoWallet   String?
  status          TransacaoStatus        @default(pendente)
  codAporte       Int?
  codPagtoServico Int?
  codPagtoMarco   Int?
  aporte          aporte?                @relation(fields: [codAporte], references: [codAporte], map: "transacao_blockchain_codAporte_fkey1")
  pagtoMarco      pagto_marco_concluido? @relation(fields: [codPagtoMarco], references: [codPagtoMarco], map: "transacao_blockchain_codPagtoMarco_fkey2")
  pagtoServico    pagto_servico?         @relation(fields: [codPagtoServico], references: [codPagtoServico], map: "transacao_blockchain_codPagtoServico_fkey3")

  @@index([codAporte], map: "transacao_blockchain_codAporte_fkey")
  @@index([codPagtoMarco], map: "transacao_blockchain_codPagtoMarco_fkey")
  @@index([codPagtoServico], map: "transacao_blockchain_codPagtoServico_fkey")
}

enum execucao_marco_bc_statusValidacaoCBH {
  PENDENTE
  APROVADO
  REPROVADO
}

enum TransacaoTipo {
  aporte
  pagamento_servico
  pagamento_marco
}

enum TransacaoStatus {
  pendente
  confirmada
  falha
}
